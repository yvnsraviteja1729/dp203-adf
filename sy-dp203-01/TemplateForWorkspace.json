{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "sy-dp203-01"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics1'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=sy-dp203-01-ondemand.sql.azuresynapse.net;Initial Catalog=yvns"
		},
		"sy-dp203-01-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sy-dp203-01-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:sy-dp203-01.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"ls_sayvnsdp20302_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sayvnsdp20302.dfs.core.windows.net/"
		},
		"sy-dp203-01-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sayvnsdp20302.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Execute_stored_procedure')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Delete1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[dbo].[parque_log]",
							"storedProcedureParameters": {
								"category": {
									"value": "failed",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "sy-dp203-01-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								},
								"path": "files"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics1')]",
				"[concat(variables('workspaceId'), '/datasets/Parquet1')]",
				"[concat(variables('workspaceId'), '/linkedServices/sy-dp203-01-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/csv to json')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Correlation id",
											"type": "String"
										},
										"sink": {
											"path": "Correlation id"
										}
									},
									{
										"source": {
											"name": "Operation name",
											"type": "String"
										},
										"sink": {
											"path": "Operation name"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String"
										},
										"sink": {
											"path": "Status"
										}
									},
									{
										"source": {
											"name": "Event category",
											"type": "String"
										},
										"sink": {
											"path": "Event category"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String"
										},
										"sink": {
											"path": "Level"
										}
									},
									{
										"source": {
											"name": "Time",
											"type": "String"
										},
										"sink": {
											"path": "Time"
										}
									},
									{
										"source": {
											"name": "Subscription",
											"type": "String"
										},
										"sink": {
											"path": "Subscription"
										}
									},
									{
										"source": {
											"name": "Resource",
											"type": "String"
										},
										"sink": {
											"path": "Resource"
										}
									},
									{
										"source": {
											"name": "Resource group",
											"type": "String"
										},
										"sink": {
											"path": "Resource group"
										}
									},
									{
										"source": {
											"name": "Resource type",
											"type": "String"
										},
										"sink": {
											"path": "Resource type"
										}
									},
									{
										"source": {
											"name": "Event initiated by",
											"type": "String"
										},
										"sink": {
											"path": "Event initiated by"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-03-02T14:16:05Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DelimitedText1')]",
				"[concat(variables('workspaceId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/csv to parquet')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Correlation id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Correlation_id",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Operation name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operation_name",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Event category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Event_category",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Level",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Level",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Time",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Subscription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Subscription",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Event initiated by",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Event_initiated_by",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Resource type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resource_type",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Resource group",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resource_group",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Resource",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resource",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-03-02T14:30:44Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DelimitedText1')]",
				"[concat(variables('workspaceId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sy-dp203-01-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Log.csv",
						"folderPath": "csv",
						"fileSystem": "files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Correlation id",
						"type": "String"
					},
					{
						"name": "Operation name",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Event category",
						"type": "String"
					},
					{
						"name": "Level",
						"type": "String"
					},
					{
						"name": "Time",
						"type": "String"
					},
					{
						"name": "Subscription",
						"type": "String"
					},
					{
						"name": "Event initiated by",
						"type": "String"
					},
					{
						"name": "Resource type",
						"type": "String"
					},
					{
						"name": "Resource group",
						"type": "String"
					},
					{
						"name": "Resource",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sy-dp203-01-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Json1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sy-dp203-01-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "json",
						"fileSystem": "files"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sy-dp203-01-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sy-dp203-01-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "parquet_modified/3",
						"fileSystem": "files"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sy-dp203-01-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_sayvnsdp20302')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_sayvnsdp20302_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sy-dp203-01-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('sy-dp203-01-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sy-dp203-01-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('sy-dp203-01-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks",
			"apiVersion": "2019-06-01-preview",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Add role for synapse managed identiy')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE LOGIN [sy-dp203-01]\n\tFROM EXTERNAL PROVIDER\n\nCREATE USER [sy-dp203-01]\n   FROM LOGIN [sy-dp203-01]\n\nALTER ROLE db_owner ADD MEMBER [sy-dp203-01]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "yvns",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CETAS SP')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "DROP PROCEDURE parque_log\n\nCREATE PROCEDURE parque_log @category VARCHAR(50)\nAS\nBEGIN\n    IF EXISTS (\n                SELECT * FROM  sys.external_tables WHERE name = 'parquelogs'\n            )\n        DROP EXTERNAL TABLE parquelogs\n\n    IF NOT EXISTS (\n            SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat'\n        ) \n        CREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n        WITH (\n             FORMAT_TYPE = PARQUET\n        )\n    -- GO    \n    \n    IF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'files_sayvnsdp20302_dfs_core_windows_net') \n        CREATE EXTERNAL DATA SOURCE [files_sayvnsdp20302_dfs_core_windows_net] \n        WITH (\n            LOCATION = 'abfss://files@sayvnsdp20302.dfs.core.windows.net' \n        )\n    -- GO   \n\n    CREATE EXTERNAL TABLE [dbo].[parquelogs] \n    WITH(   \n            LOCATION = 'parquet_modified/3',\n            DATA_SOURCE = files_sayvnsdp20302_dfs_core_windows_net,\n            FILE_FORMAT = SynapseParquetFormat\n            \n    )AS\n    SELECT * FROM OPENROWSET(\n            BULK 'https://sayvnsdp20302.dfs.core.windows.net/files/parquet/Log.parquet',\n            FORMAT = 'PARQUET'\n        ) AS [result]\n    WHERE STATUS = @category\nEND\n\n\nEXEC parque_log @category='Succeeded'\n\nSELECT * from [dbo].[parquelogs]\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "yvns",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CETAS')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'files_sayvnsdp20302_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [files_sayvnsdp20302_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://files@sayvnsdp20302.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE [dbo].[parque_logs] \n   WITH(\n        LOCATION = 'parquet_modified/',\n        DATA_SOURCE = files_sayvnsdp20302_dfs_core_windows_net,\n        FILE_FORMAT = SynapseParquetFormat\n   )AS\nSELECT TOP 100 * FROM OPENROWSET(\n        BULK 'https://sayvnsdp20302.dfs.core.windows.net/files/parquet/Log.parquet',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n\n-- you can query the newly created external table\nSELECT * FROM [dbo].[parque_logs] ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "yvns",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Open row set function')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP 100 *\nFROM OPENROWSET(\n    BULK 'abfss://files@sayvnsdp20302.dfs.core.windows.net/csv/*.csv',\n    FORMAT = 'csv',\n    PARSER_VERSION = '2.0',\n    HEADER_ROW = TRUE)\n AS rows\n\nSELECT *\nFROM\n    OPENROWSET(\n        BULK 'abfss://files@sayvnsdp20302.dfs.core.windows.net/json/*.json',\n        FORMAT = 'csv',\n        FIELDTERMINATOR ='0x0b',\n        FIELDQUOTE = '0x0b',\n        ROWTERMINATOR = '0x0b'\n    ) WITH (doc NVARCHAR(MAX)) as rows ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseDelimitedTextFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseDelimitedTextFormat] \n\tWITH ( FORMAT_TYPE = DELIMITEDTEXT ,\n\t       FORMAT_OPTIONS (\n\t\t\t FIELD_TERMINATOR = ',',\n\t\t\t FIRST_ROW = 01,\n\t\t\t USE_TYPE_DEFAULT = FALSE\n\t\t\t))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'files_sayvnsdp20302_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [files_sayvnsdp20302_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://files@sayvnsdp20302.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE dbo.logs (\n\t[Correlation id] uniqueidentifier,\n\t[Operation name] nvarchar(4000),\n\t[Status] nvarchar(4000),\n\t[Event category] nvarchar(4000),\n\t[Level] nvarchar(4000),\n\t[Time] datetime2(0),\n\t[Subscription] uniqueidentifier,\n\t[Event initiated by] nvarchar(4000),\n\t[Resource type] nvarchar(4000),\n\t[Resource group] nvarchar(4000),\n\t[Resource] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'csv/Log.csv',\n\tDATA_SOURCE = [files_sayvnsdp20302_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseDelimitedTextFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM dbo.logs\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "yvns",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nSELECT TOP 100\n    jsonContent\n/* --> place the keys that you see in JSON documents in the WITH clause:\n       , JSON_VALUE (jsonContent, '$.key1') AS header1\n       , JSON_VALUE (jsonContent, '$.key2') AS header2\n*/\nFROM\n    OPENROWSET(\n        BULK 'https://sayvnsdp20302.dfs.core.windows.net/files/json/Log.json',\n        FORMAT = 'CSV',\n        FIELDQUOTE = '0x0b',\n        FIELDTERMINATOR ='0x0b',\n        ROWTERMINATOR = '0x0b'\n    )\n    WITH (\n        jsonContent varchar(MAX)\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://sayvnsdp20302.dfs.core.windows.net/files/parquet/Log.parquet',\n        FORMAT = 'PARQUET'\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 4')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'files_sayvnsdp20302_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [files_sayvnsdp20302_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://files@sayvnsdp20302.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE dbo.logs_parqet (\n\t[Correlation_id] nvarchar(4000),\n\t[Operation_name] nvarchar(4000),\n\t[Status] nvarchar(4000),\n\t[Event_category] nvarchar(4000),\n\t[Level] nvarchar(4000),\n\t[Time] nvarchar(4000),\n\t[Subscription] nvarchar(4000),\n\t[Event_initiated_by] nvarchar(4000),\n\t[Resource_type] nvarchar(4000),\n\t[Resource_group] nvarchar(4000),\n\t[Resource] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'parquet/Log.parquet',\n\tDATA_SOURCE = [files_sayvnsdp20302_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM dbo.logs_parqet\nGO\n\n-- DROP EXTERNAL TABLE dbo.logs_parqet",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "yvns",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/lake_db')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "lake_db",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true,
								"DerivedModelDBInfo": "{\"ModelDirectives\":{\"BaseModel\":{\"Name\":\"Banking\",\"Version\":\"1.0.0\"}}}"
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://lake-database@sayvnsdp20302.dfs.core.windows.net/",
								"Properties": {
									"FormatType": "parquet",
									"LinkedServiceName": "ls_sayvnsdp20302"
								}
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Facility",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "lake_db"
							},
							"Description": "A complex of buildings, equipment and supporting assets that fulfills a specific function or operation.\n\nNote:\nA facility is an above ground infrastructure associated with the operation and maintenance of gas fields, gas plants, water processing and gas/water transmission pipelines (Origin - GIS Technical specification for Field Data Collection).\n\nA collection of surface equipment and meters which facilitate the production, injection or disposition of products. This equipment supports any operation in the processing, development and transportation of products (PPDM).",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "FacilityId",
										"Description": "The unique identifier of a Facility.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityName",
										"Description": "The business name of the Facility.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityName"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityDescription",
										"Description": "The description of the Facility.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityDescription"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityTypeId",
										"Description": "The unique identifier of a Facility Type.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "LocationId",
										"Description": "The unique identifier of a Location.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "LocationId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityTelephoneNumber",
										"Description": "The Facility telephone number.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityTelephoneNumber"
										},
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 15,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityFaxNumber",
										"Description": "The Facility fax number.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityFaxNumber"
										},
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 15,
											"Scale": 0,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityEmailAddress",
										"Description": "The Facility email address.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityEmailAddress"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "PartyId",
										"Description": "The unique identifier of a Party.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "PartyId"
										},
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityNote",
										"Description": "A note, comment or additional information regarding the facility.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityNote"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityFirstOperationalDate",
										"Description": "The first date of operation of the facility.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityFirstOperationalDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityLastOperationalDate",
										"Description": "The last operation date of the facility.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityLastOperationalDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityFirstFeasibilityStudyStarted",
										"Description": "The date that the facility feasibility study was started.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityFirstFeasibilityStudyStarted"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityFeasibilityStudyAcceptedDate",
										"Description": "The date that the facility feasibility study was accepted.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityFeasibilityStudyAcceptedDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityPermitsAppliedDate",
										"Description": "The date that permits were applied for.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityPermitsAppliedDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityPermitsReceivedDate",
										"Description": "The date that permits were applied received for operation.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityPermitsReceivedDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityConstructionStartDate",
										"Description": "The date that Facility Construction started.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityConstructionStartDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityConstructionCompletedDate",
										"Description": "The date that Facility Construction was completed.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityConstructionCompletedDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityConstructionCostAmount",
										"Description": "The facility construction cost amount.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityConstructionCostAmount"
										},
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 2,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityFirstProductionDate",
										"Description": "The date of first production by the facility.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityFirstProductionDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityLastProductionDate",
										"Description": "The date of last production by the facility.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityLastProductionDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FacilityClosureDate",
										"Description": "The date that the facility was closed.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "FacilityClosureDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "DailyCapacityGpmPerDay",
										"Description": "The daily capacity in barrels per day of the facility.",
										"BaseAttributeReference": {
											"Entity": "Facility.cdm.json/Facility",
											"Name": "DailyCapacityGpmPerDay"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"FacilityId\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityId\"},\"FacilityName\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityName\"},\"FacilityDescription\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityDescription\"},\"FacilityTypeId\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityTypeId\"},\"LocationId\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"LocationId\"},\"FacilityTelephoneNumber\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityTelephoneNumber\"},\"FacilityFaxNumber\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityFaxNumber\"},\"FacilityEmailAddress\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityEmailAddress\"},\"PartyId\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"PartyId\"},\"FacilityNote\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityNote\"},\"FacilityFirstOperationalDate\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityFirstOperationalDate\"},\"FacilityLastOperationalDate\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityLastOperationalDate\"},\"FacilityFirstFeasibilityStudyStarted\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityFirstFeasibilityStudyStarted\"},\"FacilityFeasibilityStudyAcceptedDate\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityFeasibilityStudyAcceptedDate\"},\"FacilityPermitsAppliedDate\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityPermitsAppliedDate\"},\"FacilityPermitsReceivedDate\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityPermitsReceivedDate\"},\"FacilityConstructionStartDate\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityConstructionStartDate\"},\"FacilityConstructionCompletedDate\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityConstructionCompletedDate\"},\"FacilityConstructionCostAmount\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityConstructionCostAmount\"},\"FacilityFirstProductionDate\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityFirstProductionDate\"},\"FacilityLastProductionDate\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityLastProductionDate\"},\"FacilityClosureDate\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityClosureDate\"},\"DailyCapacityGpmPerDay\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"DailyCapacityGpmPerDay\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"Facility\",\"path\":\"Facility.cdm.json/Facility\"},\"description\":\"A complex of buildings, equipment and supporting assets that fulfills a specific function or operation.\\n\\nNote:\\nA facility is an above ground infrastructure associated with the operation and maintenance of gas fields, gas plants, water processing and gas/water transmission pipelines (Origin - GIS Technical specification for Field Data Collection).\\n\\nA collection of surface equipment and meters which facilitate the production, injection or disposition of products. This equipment supports any operation in the processing, development and transportation of products (PPDM).\",\"primaryKey\":[\"FacilityId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Facility.\",\"isNullable\":false,\"name\":\"FacilityId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityName\"},\"dataType\":\"string\",\"dataTypeLength\":256,\"description\":\"The business name of the Facility.\",\"isNullable\":true,\"name\":\"FacilityName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityDescription\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"The description of the Facility.\",\"isNullable\":true,\"name\":\"FacilityDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Facility Type.\",\"isNullable\":true,\"name\":\"FacilityTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"LocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":true,\"name\":\"LocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityTelephoneNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":15,\"description\":\"The Facility telephone number.\",\"isNullable\":true,\"scale\":0,\"name\":\"FacilityTelephoneNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityFaxNumber\"},\"dataType\":\"decimal\",\"dataTypeLength\":15,\"description\":\"The Facility fax number.\",\"isNullable\":true,\"scale\":0,\"name\":\"FacilityFaxNumber\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityEmailAddress\"},\"dataType\":\"string\",\"dataTypeLength\":256,\"description\":\"The Facility email address.\",\"isNullable\":true,\"name\":\"FacilityEmailAddress\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"PartyId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Party.\",\"isNullable\":true,\"name\":\"PartyId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityNote\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A note, comment or additional information regarding the facility.\",\"isNullable\":true,\"name\":\"FacilityNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityFirstOperationalDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The first date of operation of the facility.\",\"isNullable\":true,\"name\":\"FacilityFirstOperationalDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityLastOperationalDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The last operation date of the facility.\",\"isNullable\":true,\"name\":\"FacilityLastOperationalDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityFirstFeasibilityStudyStarted\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the facility feasibility study was started.\",\"isNullable\":true,\"name\":\"FacilityFirstFeasibilityStudyStarted\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityFeasibilityStudyAcceptedDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the facility feasibility study was accepted.\",\"isNullable\":true,\"name\":\"FacilityFeasibilityStudyAcceptedDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityPermitsAppliedDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that permits were applied for.\",\"isNullable\":true,\"name\":\"FacilityPermitsAppliedDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityPermitsReceivedDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that permits were applied received for operation.\",\"isNullable\":true,\"name\":\"FacilityPermitsReceivedDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityConstructionStartDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that Facility Construction started.\",\"isNullable\":true,\"name\":\"FacilityConstructionStartDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityConstructionCompletedDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that Facility Construction was completed.\",\"isNullable\":true,\"name\":\"FacilityConstructionCompletedDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityConstructionCostAmount\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The facility construction cost amount.\",\"isNullable\":true,\"scale\":2,\"name\":\"FacilityConstructionCostAmount\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityFirstProductionDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date of first production by the facility.\",\"isNullable\":true,\"name\":\"FacilityFirstProductionDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityLastProductionDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date of last production by the facility.\",\"isNullable\":true,\"name\":\"FacilityLastProductionDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"FacilityClosureDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the facility was closed.\",\"isNullable\":true,\"name\":\"FacilityClosureDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"Facility.cdm.json/Facility\",\"name\":\"DailyCapacityGpmPerDay\"},\"dataType\":\"integer\",\"description\":\"The daily capacity in barrels per day of the facility.\",\"isNullable\":true,\"name\":\"DailyCapacityGpmPerDay\"}]}}}",
								"Description": "A complex of buildings, equipment and supporting assets that fulfills a specific function or operation.\n\nNote:\nA facility is an above ground infrastructure associated with the operation and maintenance of gas fields, gas plants, water processing and gas/water transmission pipelines (Origin - GIS Technical specification for Field Data Collection).\n\nA collection of surface equipment and meters which facilitate the production, injection or disposition of products. This equipment supports any operation in the processing, development and transportation of products (PPDM).",
								"DisplayFolderInfo": "{\"name\":\"Network\",\"colorCode\":\"#0050AC\"}",
								"PrimaryKeys": "FacilityId"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "FeedstockType",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "lake_db"
							},
							"Description": "The type of feedstock.\n\nEx:\nFRACTIONATION PROCESS:\nAtmospheric distillation <- Desalted crude oil\nVacuum distillation <- Gas oil, lube stock, residual\n\nCONVERSION PROCESSES - DECOMPOSITION:\nCatalytic cracking <- Gas oil, coke distillate\nCoking <- Gas oil, coke distillate\nHydro-cracking <- Gas oil, cracked oil, residual\nHydrogen steam reforming <- Desulfurized gas, O2, steam\nSteam cracking  <- Heavy fuel/distillate\nVisbreaking  (Reduce viscosity) -> Distillate, tar\n\nCONVERSION PROCESSES - UNIFICATION:\nAlkylation  (Unite olefins & isoparaffins) -> Iso-octane (alkylate)\nGrease compounding <- Lube oil, fatty acid, alky metal\nPolymerizing <- Cracker olefins\n\nCONVERSION PROCESSES - ALTERATION OR REARRANGEMENT:\nCatalytic reforming <- Coker/hydro-cracker naphtha\nIsomerization <- Butane, pentane, hexane\n\nTREATMENT PROCESSES:\nAmine treating <- Sour gas, HCs w/CO2 & H2S\nDesalting <- Crude oil\nDrying & sweetening <- Liq Hcs, LPG, alky feedstock\nFurfural extraction <- Cycle oils & lube feed- stocks\nHydrodesulfurization <- High-sulfur residual/gas oil\nHydrotreating <- Residuals, cracked HC's\nPhenol extraction <- Lube oil base stocks\nSolvent deasphalting <- Vacuum tower residual, propane\nSolvent dewaxing <- Vacuum tower lube oils\nSolvent extraction <- Gas oil, reformate, distillate\nSweetening <- Untreated distillate/gasoline\n\nCHEMICAL PROCESSES:\nEx\nPropene\nNatural Gas\nWater\nEthylene\n1-butene\n1-hexene\nVinylic Comonomers\nHexene\nNitrogen\n\nHydrogen\nNatural Gas Liquids\nCoal\nBy-Product Streams \nCarbon Dioxide (Co2) From Flue Gases\nSyngas\nCarbon Monoxide\nNitrogen\nCarbon Dioxide\nEthane\nBenzene\nBiomass/ Fuelwood\nBiomass/ Pellets\nBiomass/ Charcoal\nBiomass/ Forest Residues\nBiomass/ Black Liquor\nBiomass/ Bioethanol from crops\nBiomass/ Biodiesel from crops\nBiomass/ Biogas from crops/animals\nBiomass/ Municipal waste\n\nNote:\nPropylene may be copolymerized with a range of other olefins, such as ethylene and oc-olefins (1-butene, 1-hexene, etc.). \nThe other olefins are termed comonomers and are incorporated into the growing polymer chain.\n\nOTHER\n\nEx:\nNatural Gas (methanol, ammonia, hydrogen)  \nNaphtha (methanol, ammonia, hydrogen)\nSour Gas\nRich Gas\nRaw Natural Gas\nWet Gas\n\nNote:\nThe type of feedstock depends on the process.\nNatural Gas is a feedstock to product ammonia.\nNatural Gas is the product produced in other processes.\n\nSour Gas \nGas containing a high level of Carbon Dioxide or Hydrogen Sulfide, which are corrosive in the presence of water. They may therefore require drying or removal to preserve the pipeline. \n\nRich Gas \nRich gas is gas with relatively large quantities of heavier fractions in its composition (typically up to about 15%) and thus of high Calorific Value. Also known as Wet Gas.\n\nRaw Natural Gas \nNatural gas still containing impurities and unwanted substances, such as water, nitrogen, carbon dioxide, hydrogen sulfide gas and helium. \n\nWet Gas \nNatural gas containing condensable Hydrocarbons",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "FeedstockTypeId",
										"Description": "The unique identifier of a feedstock type.",
										"BaseAttributeReference": {
											"Entity": "FeedstockType.cdm.json/FeedstockType",
											"Name": "FeedstockTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FeedstockTypeName",
										"Description": "The name of a feedstock type.",
										"BaseAttributeReference": {
											"Entity": "FeedstockType.cdm.json/FeedstockType",
											"Name": "FeedstockTypeName"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FeedstockTypeDescription",
										"Description": "The description of a feedstock type.",
										"BaseAttributeReference": {
											"Entity": "FeedstockType.cdm.json/FeedstockType",
											"Name": "FeedstockTypeDescription"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "CorrosiveQualityId",
										"Description": "The unique identifier of a corrosive quality.",
										"BaseAttributeReference": {
											"Entity": "FeedstockType.cdm.json/FeedstockType",
											"Name": "CorrosiveQualityId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FeedstockEmissionFactorUnits",
										"Description": "The feedstock emission factor units.",
										"BaseAttributeReference": {
											"Entity": "FeedstockType.cdm.json/FeedstockType",
											"Name": "FeedstockEmissionFactorUnits"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FeedstockEmissionFactorUomId",
										"Description": "The feedstock emission factor UOM.",
										"BaseAttributeReference": {
											"Entity": "FeedstockType.cdm.json/FeedstockType",
											"Name": "FeedstockEmissionFactorUomId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"FeedstockTypeId\":{\"entity\":\"FeedstockType.cdm.json/FeedstockType\",\"name\":\"FeedstockTypeId\"},\"FeedstockTypeName\":{\"entity\":\"FeedstockType.cdm.json/FeedstockType\",\"name\":\"FeedstockTypeName\"},\"FeedstockTypeDescription\":{\"entity\":\"FeedstockType.cdm.json/FeedstockType\",\"name\":\"FeedstockTypeDescription\"},\"CorrosiveQualityId\":{\"entity\":\"FeedstockType.cdm.json/FeedstockType\",\"name\":\"CorrosiveQualityId\"},\"FeedstockEmissionFactorUnits\":{\"entity\":\"FeedstockType.cdm.json/FeedstockType\",\"name\":\"FeedstockEmissionFactorUnits\"},\"FeedstockEmissionFactorUomId\":{\"entity\":\"FeedstockType.cdm.json/FeedstockType\",\"name\":\"FeedstockEmissionFactorUomId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"FeedstockType\",\"path\":\"FeedstockType.cdm.json/FeedstockType\"},\"description\":\"The type of feedstock.\\n\\nEx:\\nFRACTIONATION PROCESS:\\nAtmospheric distillation <- Desalted crude oil\\nVacuum distillation <- Gas oil, lube stock, residual\\n\\nCONVERSION PROCESSES - DECOMPOSITION:\\nCatalytic cracking <- Gas oil, coke distillate\\nCoking <- Gas oil, coke distillate\\nHydro-cracking <- Gas oil, cracked oil, residual\\nHydrogen steam reforming <- Desulfurized gas, O2, steam\\nSteam cracking  <- Heavy fuel/distillate\\nVisbreaking  (Reduce viscosity) -> Distillate, tar\\n\\nCONVERSION PROCESSES - UNIFICATION:\\nAlkylation  (Unite olefins & isoparaffins) -> Iso-octane (alkylate)\\nGrease compounding <- Lube oil, fatty acid, alky metal\\nPolymerizing <- Cracker olefins\\n\\nCONVERSION PROCESSES - ALTERATION OR REARRANGEMENT:\\nCatalytic reforming <- Coker/hydro-cracker naphtha\\nIsomerization <- Butane, pentane, hexane\\n\\nTREATMENT PROCESSES:\\nAmine treating <- Sour gas, HCs w/CO2 & H2S\\nDesalting <- Crude oil\\nDrying & sweetening <- Liq Hcs, LPG, alky feedstock\\nFurfural extraction <- Cycle oils & lube feed- stocks\\nHydrodesulfurization <- High-sulfur residual/gas oil\\nHydrotreating <- Residuals, cracked HC's\\nPhenol extraction <- Lube oil base stocks\\nSolvent deasphalting <- Vacuum tower residual, propane\\nSolvent dewaxing <- Vacuum tower lube oils\\nSolvent extraction <- Gas oil, reformate, distillate\\nSweetening <- Untreated distillate/gasoline\\n\\nCHEMICAL PROCESSES:\\nEx\\nPropene\\nNatural Gas\\nWater\\nEthylene\\n1-butene\\n1-hexene\\nVinylic Comonomers\\nHexene\\nNitrogen\\n\\nHydrogen\\nNatural Gas Liquids\\nCoal\\nBy-Product Streams \\nCarbon Dioxide (Co2) From Flue Gases\\nSyngas\\nCarbon Monoxide\\nNitrogen\\nCarbon Dioxide\\nEthane\\nBenzene\\nBiomass/ Fuelwood\\nBiomass/ Pellets\\nBiomass/ Charcoal\\nBiomass/ Forest Residues\\nBiomass/ Black Liquor\\nBiomass/ Bioethanol from crops\\nBiomass/ Biodiesel from crops\\nBiomass/ Biogas from crops/animals\\nBiomass/ Municipal waste\\n\\nNote:\\nPropylene may be copolymerized with a range of other olefins, such as ethylene and oc-olefins (1-butene, 1-hexene, etc.). \\nThe other olefins are termed comonomers and are incorporated into the growing polymer chain.\\n\\nOTHER\\n\\nEx:\\nNatural Gas (methanol, ammonia, hydrogen)  \\nNaphtha (methanol, ammonia, hydrogen)\\nSour Gas\\nRich Gas\\nRaw Natural Gas\\nWet Gas\\n\\nNote:\\nThe type of feedstock depends on the process.\\nNatural Gas is a feedstock to product ammonia.\\nNatural Gas is the product produced in other processes.\\n\\nSour Gas \\nGas containing a high level of Carbon Dioxide or Hydrogen Sulfide, which are corrosive in the presence of water. They may therefore require drying or removal to preserve the pipeline. \\n\\nRich Gas \\nRich gas is gas with relatively large quantities of heavier fractions in its composition (typically up to about 15%) and thus of high Calorific Value. Also known as Wet Gas.\\n\\nRaw Natural Gas \\nNatural gas still containing impurities and unwanted substances, such as water, nitrogen, carbon dioxide, hydrogen sulfide gas and helium. \\n\\nWet Gas \\nNatural gas containing condensable Hydrocarbons\",\"primaryKey\":[\"FeedstockTypeId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"FeedstockType.cdm.json/FeedstockType\",\"name\":\"FeedstockTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a feedstock type.\",\"isNullable\":false,\"name\":\"FeedstockTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"FeedstockType.cdm.json/FeedstockType\",\"name\":\"FeedstockTypeName\"},\"dataType\":\"string\",\"dataTypeLength\":256,\"description\":\"The name of a feedstock type.\",\"isNullable\":true,\"name\":\"FeedstockTypeName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"FeedstockType.cdm.json/FeedstockType\",\"name\":\"FeedstockTypeDescription\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"The description of a feedstock type.\",\"isNullable\":true,\"name\":\"FeedstockTypeDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"FeedstockType.cdm.json/FeedstockType\",\"name\":\"CorrosiveQualityId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a corrosive quality.\",\"isNullable\":true,\"name\":\"CorrosiveQualityId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"FeedstockType.cdm.json/FeedstockType\",\"name\":\"FeedstockEmissionFactorUnits\"},\"dataType\":\"integer\",\"description\":\"The feedstock emission factor units.\",\"isNullable\":true,\"name\":\"FeedstockEmissionFactorUnits\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"FeedstockType.cdm.json/FeedstockType\",\"name\":\"FeedstockEmissionFactorUomId\"},\"dataType\":\"integer\",\"description\":\"The feedstock emission factor UOM.\",\"isNullable\":true,\"name\":\"FeedstockEmissionFactorUomId\"}]}}}",
								"Description": "The type of feedstock.\n\nEx:\nFRACTIONATION PROCESS:\nAtmospheric distillation <- Desalted crude oil\nVacuum distillation <- Gas oil, lube stock, residual\n\nCONVERSION PROCESSES - DECOMPOSITION:\nCatalytic cracking <- Gas oil, coke distillate\nCoking <- Gas oil, coke distillate\nHydro-cracking <- Gas oil, cracked oil, residual\nHydrogen steam reforming <- Desulfurized gas, O2, steam\nSteam cracking  <- Heavy fuel/distillate\nVisbreaking  (Reduce viscosity) -> Distillate, tar\n\nCONVERSION PROCESSES - UNIFICATION:\nAlkylation  (Unite olefins & isoparaffins) -> Iso-octane (alkylate)\nGrease compounding <- Lube oil, fatty acid, alky metal\nPolymerizing <- Cracker olefins\n\nCONVERSION PROCESSES - ALTERATION OR REARRANGEMENT:\nCatalytic reforming <- Coker/hydro-cracker naphtha\nIsomerization <- Butane, pentane, hexane\n\nTREATMENT PROCESSES:\nAmine treating <- Sour gas, HCs w/CO2 & H2S\nDesalting <- Crude oil\nDrying & sweetening <- Liq Hcs, LPG, alky feedstock\nFurfural extraction <- Cycle oils & lube feed- stocks\nHydrodesulfurization <- High-sulfur residual/gas oil\nHydrotreating <- Residuals, cracked HC's\nPhenol extraction <- Lube oil base stocks\nSolvent deasphalting <- Vacuum tower residual, propane\nSolvent dewaxing <- Vacuum tower lube oils\nSolvent extraction <- Gas oil, reformate, distillate\nSweetening <- Untreated distillate/gasoline\n\nCHEMICAL PROCESSES:\nEx\nPropene\nNatural Gas\nWater\nEthylene\n1-butene\n1-hexene\nVinylic Comonomers\nHexene\nNitrogen\n\nHydrogen\nNatural Gas Liquids\nCoal\nBy-Product Streams \nCarbon Dioxide (Co2) From Flue Gases\nSyngas\nCarbon Monoxide\nNitrogen\nCarbon Dioxide\nEthane\nBenzene\nBiomass/ Fuelwood\nBiomass/ Pellets\nBiomass/ Charcoal\nBiomass/ Forest Residues\nBiomass/ Black Liquor\nBiomass/ Bioethanol from crops\nBiomass/ Biodiesel from crops\nBiomass/ Biogas from crops/animals\nBiomass/ Municipal waste\n\nNote:\nPropylene may be copolymerized with a range of other olefins, such as ethylene and oc-olefins (1-butene, 1-hexene, etc.). \nThe other olefins are termed comonomers and are incorporated into the growing polymer chain.\n\nOTHER\n\nEx:\nNatural Gas (methanol, ammonia, hydrogen)  \nNaphtha (methanol, ammonia, hydrogen)\nSour Gas\nRich Gas\nRaw Natural Gas\nWet Gas\n\nNote:\nThe type of feedstock depends on the process.\nNatural Gas is a feedstock to product ammonia.\nNatural Gas is the product produced in other processes.\n\nSour Gas \nGas containing a high level of Carbon Dioxide or Hydrogen Sulfide, which are corrosive in the presence of water. They may therefore require drying or removal to preserve the pipeline. \n\nRich Gas \nRich gas is gas with relatively large quantities of heavier fractions in its composition (typically up to about 15%) and thus of high Calorific Value. Also known as Wet Gas.\n\nRaw Natural Gas \nNatural gas still containing impurities and unwanted substances, such as water, nitrogen, carbon dioxide, hydrogen sulfide gas and helium. \n\nWet Gas \nNatural gas containing condensable Hydrocarbons",
								"DisplayFolderInfo": "{\"name\":\"Network\",\"colorCode\":\"#0050AC\"}",
								"PrimaryKeys": "FeedstockTypeId"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "FuelType",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "lake_db"
							},
							"Description": "A substance containing combustible used for generating heat.\n\nEx:\nBIOMASS\n-  Agricultural residue \n-  Biochar\n-  Biodiesel\n-  Bioethanol\n-  Biogas\n-  Energy Crop - sugar cane\n-  Energy Crop -corn\n-  Forest Residue \n-  Gasohol\n-  Landfill gas\n-  Municipal wood waste\n-  Refuse-derived fuel\n-  Saw dust\n-  Syngas\n-  Urban waste\n-  Wood chips\n-  Woody biomass\n\nCOAL\n- Anthracite\n- Bituminous\n- Lignite\n\nGAS/OIL\n- Oil - Type 1 Very Light Oils (Jet Fuels, Gasoline)\n- Oil - Type 2 Light Oils (Diesel, No. 2 Fuel Oil, Light Crudes)\n- Oil - Type 3 Medium Oils (Most Crude Oils)\n- Oil - Type 4 Heavy Oils (Heavy Crude Oils, No. 6 Fuel Oil, Bunker C)\n- Oil - No.  1 diesel fuel\n- Oil - No. 2  diesel fuel\n- Oil - No. 3  diesel fuel\n- Oil - No. 4  residual fuel oil\n- Oil - No. 5  Heavy fuel oil\n- Oil - No. 6  Heavy fuel oil\n- Natural Gas\n- Liquid Natural Gas",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "FuelTypeId",
										"Description": "The unique identifier of a fuel type.",
										"BaseAttributeReference": {
											"Entity": "FuelType.cdm.json/FuelType",
											"Name": "FuelTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FuelTypeName",
										"Description": "The name of a fuel type.",
										"BaseAttributeReference": {
											"Entity": "FuelType.cdm.json/FuelType",
											"Name": "FuelTypeName"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FuelTypeDescription",
										"Description": "The description of a fuel type.",
										"BaseAttributeReference": {
											"Entity": "FuelType.cdm.json/FuelType",
											"Name": "FuelTypeDescription"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FuelEmissionFactorUnits",
										"Description": "\n\n(Category 3 document - Page 41)",
										"BaseAttributeReference": {
											"Entity": "FuelType.cdm.json/FuelType",
											"Name": "FuelEmissionFactorUnits"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "FuelEmissionFactorUomId",
										"Description": "The fuel emission factor UOM.",
										"BaseAttributeReference": {
											"Entity": "FuelType.cdm.json/FuelType",
											"Name": "FuelEmissionFactorUomId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"FuelTypeId\":{\"entity\":\"FuelType.cdm.json/FuelType\",\"name\":\"FuelTypeId\"},\"FuelTypeName\":{\"entity\":\"FuelType.cdm.json/FuelType\",\"name\":\"FuelTypeName\"},\"FuelTypeDescription\":{\"entity\":\"FuelType.cdm.json/FuelType\",\"name\":\"FuelTypeDescription\"},\"FuelEmissionFactorUnits\":{\"entity\":\"FuelType.cdm.json/FuelType\",\"name\":\"FuelEmissionFactorUnits\"},\"FuelEmissionFactorUomId\":{\"entity\":\"FuelType.cdm.json/FuelType\",\"name\":\"FuelEmissionFactorUomId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"FuelType\",\"path\":\"FuelType.cdm.json/FuelType\"},\"description\":\"A substance containing combustible used for generating heat.\\n\\nEx:\\nBIOMASS\\n-  Agricultural residue \\n-  Biochar\\n-  Biodiesel\\n-  Bioethanol\\n-  Biogas\\n-  Energy Crop - sugar cane\\n-  Energy Crop -corn\\n-  Forest Residue \\n-  Gasohol\\n-  Landfill gas\\n-  Municipal wood waste\\n-  Refuse-derived fuel\\n-  Saw dust\\n-  Syngas\\n-  Urban waste\\n-  Wood chips\\n-  Woody biomass\\n\\nCOAL\\n- Anthracite\\n- Bituminous\\n- Lignite\\n\\nGAS/OIL\\n- Oil - Type 1 Very Light Oils (Jet Fuels, Gasoline)\\n- Oil - Type 2 Light Oils (Diesel, No. 2 Fuel Oil, Light Crudes)\\n- Oil - Type 3 Medium Oils (Most Crude Oils)\\n- Oil - Type 4 Heavy Oils (Heavy Crude Oils, No. 6 Fuel Oil, Bunker C)\\n- Oil - No.  1 diesel fuel\\n- Oil - No. 2  diesel fuel\\n- Oil - No. 3  diesel fuel\\n- Oil - No. 4  residual fuel oil\\n- Oil - No. 5  Heavy fuel oil\\n- Oil - No. 6  Heavy fuel oil\\n- Natural Gas\\n- Liquid Natural Gas\",\"primaryKey\":[\"FuelTypeId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"FuelType.cdm.json/FuelType\",\"name\":\"FuelTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a fuel type.\",\"isNullable\":false,\"name\":\"FuelTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"FuelType.cdm.json/FuelType\",\"name\":\"FuelTypeName\"},\"dataType\":\"string\",\"dataTypeLength\":256,\"description\":\"The name of a fuel type.\",\"isNullable\":true,\"name\":\"FuelTypeName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"FuelType.cdm.json/FuelType\",\"name\":\"FuelTypeDescription\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"The description of a fuel type.\",\"isNullable\":true,\"name\":\"FuelTypeDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"FuelType.cdm.json/FuelType\",\"name\":\"FuelEmissionFactorUnits\"},\"dataType\":\"integer\",\"description\":\"\\n\\n(Category 3 document - Page 41)\",\"isNullable\":true,\"name\":\"FuelEmissionFactorUnits\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"FuelType.cdm.json/FuelType\",\"name\":\"FuelEmissionFactorUomId\"},\"dataType\":\"integer\",\"description\":\"The fuel emission factor UOM.\",\"isNullable\":true,\"name\":\"FuelEmissionFactorUomId\"}]}}}",
								"Description": "A substance containing combustible used for generating heat.\n\nEx:\nBIOMASS\n-  Agricultural residue \n-  Biochar\n-  Biodiesel\n-  Bioethanol\n-  Biogas\n-  Energy Crop - sugar cane\n-  Energy Crop -corn\n-  Forest Residue \n-  Gasohol\n-  Landfill gas\n-  Municipal wood waste\n-  Refuse-derived fuel\n-  Saw dust\n-  Syngas\n-  Urban waste\n-  Wood chips\n-  Woody biomass\n\nCOAL\n- Anthracite\n- Bituminous\n- Lignite\n\nGAS/OIL\n- Oil - Type 1 Very Light Oils (Jet Fuels, Gasoline)\n- Oil - Type 2 Light Oils (Diesel, No. 2 Fuel Oil, Light Crudes)\n- Oil - Type 3 Medium Oils (Most Crude Oils)\n- Oil - Type 4 Heavy Oils (Heavy Crude Oils, No. 6 Fuel Oil, Bunker C)\n- Oil - No.  1 diesel fuel\n- Oil - No. 2  diesel fuel\n- Oil - No. 3  diesel fuel\n- Oil - No. 4  residual fuel oil\n- Oil - No. 5  Heavy fuel oil\n- Oil - No. 6  Heavy fuel oil\n- Natural Gas\n- Liquid Natural Gas",
								"DisplayFolderInfo": "{\"name\":\"Network\",\"colorCode\":\"#0050AC\"}",
								"PrimaryKeys": "FuelTypeId"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "StorageContainer",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "lake_db"
							},
							"Description": "A component capable of storing a commodity.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "StorageContainerId",
										"Description": "The unique identifier of a Storage Container.",
										"BaseAttributeReference": {
											"Entity": "StorageContainer.cdm.json/StorageContainer",
											"Name": "StorageContainerId"
										},
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageContainerTypeId",
										"Description": "The unique identifier of a storage container type.",
										"BaseAttributeReference": {
											"Entity": "StorageContainer.cdm.json/StorageContainer",
											"Name": "StorageContainerTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "LocationId",
										"Description": "The unique identifier of a Location.",
										"BaseAttributeReference": {
											"Entity": "StorageContainer.cdm.json/StorageContainer",
											"Name": "LocationId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "WarehouseId",
										"Description": "The unique identifier of a Warehouse.",
										"BaseAttributeReference": {
											"Entity": "StorageContainer.cdm.json/StorageContainer",
											"Name": "WarehouseId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageLength",
										"Description": "The length of the storage expressed in meters.",
										"BaseAttributeReference": {
											"Entity": "StorageContainer.cdm.json/StorageContainer",
											"Name": "StorageLength"
										},
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageWidth",
										"Description": "The width of the storage expressed in meters.",
										"BaseAttributeReference": {
											"Entity": "StorageContainer.cdm.json/StorageContainer",
											"Name": "StorageWidth"
										},
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageHeight",
										"Description": "The height of the storage expressed in meters.",
										"BaseAttributeReference": {
											"Entity": "StorageContainer.cdm.json/StorageContainer",
											"Name": "StorageHeight"
										},
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageShellThickness",
										"Description": "The thickness of the storage expressed in millimeters.",
										"BaseAttributeReference": {
											"Entity": "StorageContainer.cdm.json/StorageContainer",
											"Name": "StorageShellThickness"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "CycleRate",
										"Description": "The Cycle rate is the average number of times a reservoir's working gas volume can be turned over during a specific period of time.",
										"BaseAttributeReference": {
											"Entity": "StorageContainer.cdm.json/StorageContainer",
											"Name": "CycleRate"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "CycleRateUnitOfMeasureId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"BaseAttributeReference": {
											"Entity": "StorageContainer.cdm.json/StorageContainer",
											"Name": "CycleRateUnitOfMeasureId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageContainerNote",
										"Description": "A note, comment or additional information regarding the storage container.",
										"BaseAttributeReference": {
											"Entity": "StorageContainer.cdm.json/StorageContainer",
											"Name": "StorageContainerNote"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ShippingLocationId",
										"Description": "The unique identifier of a Shipping Location.",
										"BaseAttributeReference": {
											"Entity": "StorageContainer.cdm.json/StorageContainer",
											"Name": "ShippingLocationId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"StorageContainerId\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"StorageContainerId\"},\"StorageContainerTypeId\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"StorageContainerTypeId\"},\"LocationId\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"LocationId\"},\"WarehouseId\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"WarehouseId\"},\"StorageLength\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"StorageLength\"},\"StorageWidth\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"StorageWidth\"},\"StorageHeight\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"StorageHeight\"},\"StorageShellThickness\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"StorageShellThickness\"},\"CycleRate\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"CycleRate\"},\"CycleRateUnitOfMeasureId\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"CycleRateUnitOfMeasureId\"},\"StorageContainerNote\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"StorageContainerNote\"},\"ShippingLocationId\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"ShippingLocationId\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"StorageContainer\",\"path\":\"StorageContainer.cdm.json/StorageContainer\"},\"description\":\"A component capable of storing a commodity.\",\"primaryKey\":[\"StorageContainerId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"StorageContainerId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Storage Container.\",\"isNullable\":false,\"name\":\"StorageContainerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"StorageContainerTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a storage container type.\",\"isNullable\":true,\"name\":\"StorageContainerTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"LocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Location.\",\"isNullable\":true,\"name\":\"LocationId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"WarehouseId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Warehouse.\",\"isNullable\":true,\"name\":\"WarehouseId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"StorageLength\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The length of the storage expressed in meters.\",\"isNullable\":true,\"scale\":8,\"name\":\"StorageLength\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"StorageWidth\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The width of the storage expressed in meters.\",\"isNullable\":true,\"scale\":8,\"name\":\"StorageWidth\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"StorageHeight\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The height of the storage expressed in meters.\",\"isNullable\":true,\"scale\":8,\"name\":\"StorageHeight\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"StorageShellThickness\"},\"dataType\":\"integer\",\"description\":\"The thickness of the storage expressed in millimeters.\",\"isNullable\":true,\"name\":\"StorageShellThickness\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"CycleRate\"},\"dataType\":\"integer\",\"description\":\"The Cycle rate is the average number of times a reservoir's working gas volume can be turned over during a specific period of time.\",\"isNullable\":true,\"name\":\"CycleRate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"CycleRateUnitOfMeasureId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"CycleRateUnitOfMeasureId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"StorageContainerNote\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A note, comment or additional information regarding the storage container.\",\"isNullable\":true,\"name\":\"StorageContainerNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainer.cdm.json/StorageContainer\",\"name\":\"ShippingLocationId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Shipping Location.\",\"isNullable\":true,\"name\":\"ShippingLocationId\"}]}}}",
								"Description": "A component capable of storing a commodity.",
								"DisplayFolderInfo": "{\"name\":\"Network\",\"colorCode\":\"#0050AC\"}",
								"PrimaryKeys": "StorageContainerId"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "StorageContainerActualStorage",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "lake_db"
							},
							"Description": "The actual storage associated with the Product for the period.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "StorageContainerId",
										"Description": "The unique identifier of a Storage Container.",
										"BaseAttributeReference": {
											"Entity": "StorageContainerActualStorage.cdm.json/StorageContainerActualStorage",
											"Name": "StorageContainerId"
										},
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProductId",
										"Description": "The unique identifier of a Product.",
										"BaseAttributeReference": {
											"Entity": "StorageContainerActualStorage.cdm.json/StorageContainerActualStorage",
											"Name": "ProductId"
										},
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "PeriodStartTimestamp",
										"Description": "The period start timestamp.",
										"BaseAttributeReference": {
											"Entity": "StorageContainerActualStorage.cdm.json/StorageContainerActualStorage",
											"Name": "PeriodStartTimestamp"
										},
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "PeriodEndTimestamp",
										"Description": "The period end timestamp.",
										"BaseAttributeReference": {
											"Entity": "StorageContainerActualStorage.cdm.json/StorageContainerActualStorage",
											"Name": "PeriodEndTimestamp"
										},
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ActualStorageUnits",
										"Description": "The units associated with the actual storage.",
										"BaseAttributeReference": {
											"Entity": "StorageContainerActualStorage.cdm.json/StorageContainerActualStorage",
											"Name": "ActualStorageUnits"
										},
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ActualStorageUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"BaseAttributeReference": {
											"Entity": "StorageContainerActualStorage.cdm.json/StorageContainerActualStorage",
											"Name": "ActualStorageUomId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageContainerActualStorageNote",
										"Description": "A note, comment or additional information regarding the storage container actual storage.",
										"BaseAttributeReference": {
											"Entity": "StorageContainerActualStorage.cdm.json/StorageContainerActualStorage",
											"Name": "StorageContainerActualStorageNote"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"StorageContainerId\":{\"entity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"name\":\"StorageContainerId\"},\"ProductId\":{\"entity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"name\":\"ProductId\"},\"PeriodStartTimestamp\":{\"entity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"name\":\"PeriodStartTimestamp\"},\"PeriodEndTimestamp\":{\"entity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"name\":\"PeriodEndTimestamp\"},\"ActualStorageUnits\":{\"entity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"name\":\"ActualStorageUnits\"},\"ActualStorageUomId\":{\"entity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"name\":\"ActualStorageUomId\"},\"StorageContainerActualStorageNote\":{\"entity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"name\":\"StorageContainerActualStorageNote\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"StorageContainerActualStorage\",\"path\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\"},\"description\":\"The actual storage associated with the Product for the period.\",\"primaryKey\":[\"StorageContainerId\",\"ProductId\",\"PeriodStartTimestamp\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"name\":\"StorageContainerId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Storage Container.\",\"isNullable\":false,\"name\":\"StorageContainerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"name\":\"ProductId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Product.\",\"isNullable\":false,\"name\":\"ProductId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"name\":\"PeriodStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The period start timestamp.\",\"isNullable\":false,\"name\":\"PeriodStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"name\":\"PeriodEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The period end timestamp.\",\"isNullable\":true,\"name\":\"PeriodEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"name\":\"ActualStorageUnits\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The units associated with the actual storage.\",\"isNullable\":true,\"scale\":8,\"name\":\"ActualStorageUnits\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"name\":\"ActualStorageUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"ActualStorageUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"name\":\"StorageContainerActualStorageNote\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A note, comment or additional information regarding the storage container actual storage.\",\"isNullable\":true,\"name\":\"StorageContainerActualStorageNote\"}]}}}",
								"Description": "The actual storage associated with the Product for the period.",
								"DisplayFolderInfo": "{\"name\":\"Network\",\"colorCode\":\"#0050AC\"}",
								"PrimaryKeys": "StorageContainerId,ProductId,PeriodStartTimestamp"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "StorageContainerAvailableStorage",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "lake_db"
							},
							"Description": "The available storage associated with the Product for the period.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "StorageContainerId",
										"Description": "The unique identifier of a Storage Container.",
										"BaseAttributeReference": {
											"Entity": "StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage",
											"Name": "StorageContainerId"
										},
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ProductId",
										"Description": "The unique identifier of a Product.",
										"BaseAttributeReference": {
											"Entity": "StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage",
											"Name": "ProductId"
										},
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "PeriodStartTimestamp",
										"Description": "The period start timestamp.",
										"BaseAttributeReference": {
											"Entity": "StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage",
											"Name": "PeriodStartTimestamp"
										},
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "PeriodEndTimestamp",
										"Description": "The period end timestamp.",
										"BaseAttributeReference": {
											"Entity": "StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage",
											"Name": "PeriodEndTimestamp"
										},
										"OriginDataTypeName": {
											"TypeName": "timestamp",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"TimestampFormat": "YYYY-MM-DD HH:MM:SS.fffffffff",
												"HIVE_TYPE_STRING": "timestamp"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "AvailableStorageUnits",
										"Description": "The units associated with the available storage.",
										"BaseAttributeReference": {
											"Entity": "StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage",
											"Name": "AvailableStorageUnits"
										},
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 18,
											"Scale": 8,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "AvailableStorageUomId",
										"Description": "The unique identifier of a Unit Of Measure.",
										"BaseAttributeReference": {
											"Entity": "StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage",
											"Name": "AvailableStorageUomId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageContainerAvailableStorageNote",
										"Description": "A note, comment or additional information regarding the storage container available storage.",
										"BaseAttributeReference": {
											"Entity": "StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage",
											"Name": "StorageContainerAvailableStorageNote"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"StorageContainerId\":{\"entity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"name\":\"StorageContainerId\"},\"ProductId\":{\"entity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"name\":\"ProductId\"},\"PeriodStartTimestamp\":{\"entity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"name\":\"PeriodStartTimestamp\"},\"PeriodEndTimestamp\":{\"entity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"name\":\"PeriodEndTimestamp\"},\"AvailableStorageUnits\":{\"entity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"name\":\"AvailableStorageUnits\"},\"AvailableStorageUomId\":{\"entity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"name\":\"AvailableStorageUomId\"},\"StorageContainerAvailableStorageNote\":{\"entity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"name\":\"StorageContainerAvailableStorageNote\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"StorageContainerAvailableStorage\",\"path\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\"},\"description\":\"The available storage associated with the Product for the period.\",\"primaryKey\":[\"StorageContainerId\",\"ProductId\",\"PeriodStartTimestamp\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"name\":\"StorageContainerId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Storage Container.\",\"isNullable\":false,\"name\":\"StorageContainerId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"name\":\"ProductId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Product.\",\"isNullable\":false,\"name\":\"ProductId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"name\":\"PeriodStartTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The period start timestamp.\",\"isNullable\":false,\"name\":\"PeriodStartTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"name\":\"PeriodEndTimestamp\"},\"dataType\":\"timestamp\",\"description\":\"The period end timestamp.\",\"isNullable\":true,\"name\":\"PeriodEndTimestamp\",\"timestampFormat\":\"YYYY-MM-DD HH:MM:SS.fffffffff\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"name\":\"AvailableStorageUnits\"},\"dataType\":\"decimal\",\"dataTypeLength\":18,\"description\":\"The units associated with the available storage.\",\"isNullable\":true,\"scale\":8,\"name\":\"AvailableStorageUnits\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"name\":\"AvailableStorageUomId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a Unit Of Measure.\",\"isNullable\":true,\"name\":\"AvailableStorageUomId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"name\":\"StorageContainerAvailableStorageNote\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A note, comment or additional information regarding the storage container available storage.\",\"isNullable\":true,\"name\":\"StorageContainerAvailableStorageNote\"}]}}}",
								"Description": "The available storage associated with the Product for the period.",
								"DisplayFolderInfo": "{\"name\":\"Network\",\"colorCode\":\"#0050AC\"}",
								"PrimaryKeys": "StorageContainerId,ProductId,PeriodStartTimestamp"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "StorageTank",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "lake_db"
							},
							"Description": "A container that contains liquids, gases or compressed gases.",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "StorageTankId",
										"Description": "The unique identifier of a Storage Tank.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankId"
										},
										"OriginDataTypeName": {
											"TypeName": "long",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "long"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankDescription",
										"Description": "A description of the storage tank.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankDescription"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankTypeId",
										"Description": "The unique identifier of a storage tank type.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankManufacturerName",
										"Description": "The name of the storage tank manufacturer.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankManufacturerName"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 256,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankConstructionCompletedDate",
										"Description": "The date that the storage tank construction is completed.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankConstructionCompletedDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankInstallationDate",
										"Description": "The date that the storage tank was installed.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankInstallationDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "LastTestedDate",
										"Description": "The date that the storage tank was last tested.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "LastTestedDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "NextTestDate",
										"Description": "The next test date of the storage tank.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "NextTestDate"
										},
										"OriginDataTypeName": {
											"TypeName": "date",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"DateFormat": "YYYY-MM-DD",
												"HIVE_TYPE_STRING": "date"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankNumberOfWalls",
										"Description": "The number of walls comprising the storage tank.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankNumberOfWalls"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankColorDescription",
										"Description": "The color of the storage tank, which may be multiple colors - thus the need for a description.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankColorDescription"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankNote",
										"Description": "A note, comment or additional information regarding the storage tank.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankNote"
										},
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 2048,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "ThermalStorageTankIndicator",
										"Description": "One form of seasonal thermal energy storage (STES) is the use of large surface water tanks that are insulated and then covered with earth berms to enable the year-round of solar-thermal heat that is collected primarily in the summer for all-year heating.[3] A related technology has become widespread in Danish district heating systems. The thermal storage medium is gravel and water in large, shallow, lined pits that are covered with insulation, soil and grass.[4]",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "ThermalStorageTankIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankStaticGroundingWireIndicator",
										"Description": "Indicates that the storage tank has a static grounding wire.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankStaticGroundingWireIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "AtmosphericTankIndicator",
										"Description": "An atmospheric tank is a container for holding a liquid at atmospheric pressure. The major design code for welded atmospheric tanks are API 650 and API 620. API 653 is used for analysis of in-service storage tanks. In Europe the design code is Eurocode 3 (EN 1993), part 4-2.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "AtmosphericTankIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankAutomaticMeasuringTubeIndicator",
										"Description": "Indicates that the storage tank as an automatic measuring tube.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankAutomaticMeasuringTubeIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankGroundLineOnRoofIndicator",
										"Description": "Indicates that the storage tank has a ground line on the roof.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankGroundLineOnRoofIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankAntiRotationCableWiringIndicator",
										"Description": "Indicates that the storage tank has anti-rotation cable wire.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankAntiRotationCableWiringIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankFoamExtinguisherIndicator",
										"Description": "Indicates that the storage tank has an integrated foam extinguisher system.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankFoamExtinguisherIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankEdgeBuoyIndicator",
										"Description": "Indicates that the storage tank has an edge buoy.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankEdgeBuoyIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankSupportColumnIndicator",
										"Description": "Indicates that the storage tank has a support column.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankSupportColumnIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankVacuumValveIndicator",
										"Description": "Indicates that the storage tank has a vacuum valve.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankVacuumValveIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankFloatingWellIndicator",
										"Description": "Indicates that the storage tank has a float well.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankFloatingWellIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankMaximumTankLifeYears",
										"Description": "The storage tank maximum tank life expressed in years.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankMaximumTankLifeYears"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankAboveGroundIndicator",
										"Description": "Indicates that the storage tank is an above ground storage tank.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankAboveGroundIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankUndergroundIndicator",
										"Description": "Indicates that the storage tank is an underground storage tank.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankUndergroundIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankFloatingRoofIndicator",
										"Description": "Some storage tanks need a floating roof in addition to or in lieu of the fixed roof and structure. This floating roof rises and falls with the liquid level inside the tank, thereby decreasing the vapor space above the liquid level. Floating roofs are considered a safety requirement as well as a pollution prevention measure for many industries including petroleum refining.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankFloatingRoofIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankCathodicProtectionIndicator",
										"Description": "In the United States, metal tanks in contact with soil and containing petroleum products must be protected from corrosion to prevent escape of the product into the environment.[2] The most effective and common corrosion control techniques for steel in contact with soil is cathodic protection.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankCathodicProtectionIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankElectronicMonitoredIndicator",
										"Description": "A probe permanently installed in the tank is wired to a monitor to provide information on product level and temperature. These systems automatically calculate the changes in product volume that can indicate a leaking tank and usually include a daily printout.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankElectronicMonitoredIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankInterstitialMonitoringIndicator",
										"Description": "Monitors are used to check the area between the tank and the barrier for leaks and alert the operator if a leak is suspected. \n\nSome monitors indicate the physical presence of the leaked product, either liquid or gaseous. Other monitors check for a change in condition that indicates a hole in the tank, such as a loss of vacuum or a change in the level of a monitoring liquid between the walls of a double-walled\ntank.  \n\nMonitors can be as simple as a dipstick used at the lowest point of the containment to see if liquid product has leaked and pooled there. Monitors can also be sophisticated automated systems that continuously check for leaks. If the system is equipped with an electronic\nsensor, an alarm will sound and it will shut down the system if a leak is detected.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankInterstitialMonitoringIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankVaporMonitoringIndicator",
										"Description": "Vapor monitoring measures product \"fumes\" in the soil around the UST to check for a leak. This method requires installation of carefully placed monitoring wells. Vapor monitoring can be performed manually on a periodic basis or continuously using permanently installed equipment.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankVaporMonitoringIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankContainmentSumpIndicator",
										"Description": "A liquid-tight compartment enclosing the piping connections at the top of an UST providing containment of product leaks. If equipped with a sensor an alarm will sound when a leak is detected.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankContainmentSumpIndicator"
										},
										"OriginDataTypeName": {
											"TypeName": "boolean",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "boolean"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankRoofTypeId",
										"Description": "The unique identifier of a storage tank roof type.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankRoofTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankFireSystemTypeId",
										"Description": "The unique identifier of a storage tank fire system type.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankFireSystemTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankMaterialTypeId",
										"Description": "The unique identifier of a storage tank material type.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankMaterialTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankPipeConstructionTypeId",
										"Description": "The unique identifier of a storage tank pipe construction type.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankPipeConstructionTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankShapeTypeId",
										"Description": "The unique identifier of a storage tank shape type.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankShapeTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankLeakDetectionTypeId",
										"Description": "The unique identifier of a storage tank leak detection type.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankLeakDetectionTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankClassificationTypeId",
										"Description": "The unique identifier of a storage tank classification type.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankClassificationTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankConstructionMaterialTypeId",
										"Description": "The unique identifier of a storage tank construction material type.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankConstructionMaterialTypeId"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankLengthMeters",
										"Description": "The storage tank length in meters.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankLengthMeters"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankWidthMeters",
										"Description": "The storage tank width in meters.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankWidthMeters"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankHeightMeters",
										"Description": "The storage tank height in meters.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankHeightMeters"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankInnerDiameterMeters",
										"Description": "The storage tank inner diameters in meters.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankInnerDiameterMeters"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankVolumeCubicLiters",
										"Description": "The storage tank volume in cubic liters.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankVolumeCubicLiters"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankWeightTons",
										"Description": "The weight of the storage tank in tons.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankWeightTons"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankWallThicknessMillimeters",
										"Description": "The storage tank wall thickness in millimeters.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankWallThicknessMillimeters"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankOuterDiameterMeters",
										"Description": "Storage Tank outer Diameter Meters",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankOuterDiameterMeters"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankContainmentDikeCircumferenceMeters",
										"Description": "The circumference of the storage tank containment dike in meters.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankContainmentDikeCircumferenceMeters"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankContainmentDikeHeightMeters",
										"Description": "The storage tank containment dike height in meters.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankContainmentDikeHeightMeters"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "InterstitialSpaceMillimeters",
										"Description": "The space between the inner and outer walls of a  double walled tank or a secondary containment system in millimeters.\n\n May also be called \"annular\" space.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "InterstitialSpaceMillimeters"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankMaximumOperatingTemperatureC",
										"Description": "The maximum operating temperature of the storage tank in C.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankMaximumOperatingTemperatureC"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankMinimumOperatingTemperatureC",
										"Description": "The minimum operating temperature of the storage tank in C.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankMinimumOperatingTemperatureC"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									},
									{
										"Name": "StorageTankWallInterstitialSpaceMillimeters",
										"Description": "The space between the inner and outer walls of a  double walled tank or a secondary containment system in millimeters.\n\n May also be called \"annular\" space.",
										"BaseAttributeReference": {
											"Entity": "StorageTank.cdm.json/StorageTank",
											"Name": "StorageTankWallInterstitialSpaceMillimeters"
										},
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										},
										"DeltaFormatInvalidMessages": []
									}
								],
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{\"StorageTankId\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankId\"},\"StorageTankDescription\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankDescription\"},\"StorageTankTypeId\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankTypeId\"},\"StorageTankManufacturerName\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankManufacturerName\"},\"StorageTankConstructionCompletedDate\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankConstructionCompletedDate\"},\"StorageTankInstallationDate\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankInstallationDate\"},\"LastTestedDate\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"LastTestedDate\"},\"NextTestDate\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"NextTestDate\"},\"StorageTankNumberOfWalls\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankNumberOfWalls\"},\"StorageTankColorDescription\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankColorDescription\"},\"StorageTankNote\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankNote\"},\"ThermalStorageTankIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"ThermalStorageTankIndicator\"},\"StorageTankStaticGroundingWireIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankStaticGroundingWireIndicator\"},\"AtmosphericTankIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"AtmosphericTankIndicator\"},\"StorageTankAutomaticMeasuringTubeIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankAutomaticMeasuringTubeIndicator\"},\"StorageTankGroundLineOnRoofIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankGroundLineOnRoofIndicator\"},\"StorageTankAntiRotationCableWiringIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankAntiRotationCableWiringIndicator\"},\"StorageTankFoamExtinguisherIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankFoamExtinguisherIndicator\"},\"StorageTankEdgeBuoyIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankEdgeBuoyIndicator\"},\"StorageTankSupportColumnIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankSupportColumnIndicator\"},\"StorageTankVacuumValveIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankVacuumValveIndicator\"},\"StorageTankFloatingWellIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankFloatingWellIndicator\"},\"StorageTankMaximumTankLifeYears\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankMaximumTankLifeYears\"},\"StorageTankAboveGroundIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankAboveGroundIndicator\"},\"StorageTankUndergroundIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankUndergroundIndicator\"},\"StorageTankFloatingRoofIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankFloatingRoofIndicator\"},\"StorageTankCathodicProtectionIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankCathodicProtectionIndicator\"},\"StorageTankElectronicMonitoredIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankElectronicMonitoredIndicator\"},\"StorageTankInterstitialMonitoringIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankInterstitialMonitoringIndicator\"},\"StorageTankVaporMonitoringIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankVaporMonitoringIndicator\"},\"StorageTankContainmentSumpIndicator\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankContainmentSumpIndicator\"},\"StorageTankRoofTypeId\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankRoofTypeId\"},\"StorageTankFireSystemTypeId\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankFireSystemTypeId\"},\"StorageTankMaterialTypeId\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankMaterialTypeId\"},\"StorageTankPipeConstructionTypeId\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankPipeConstructionTypeId\"},\"StorageTankShapeTypeId\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankShapeTypeId\"},\"StorageTankLeakDetectionTypeId\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankLeakDetectionTypeId\"},\"StorageTankClassificationTypeId\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankClassificationTypeId\"},\"StorageTankConstructionMaterialTypeId\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankConstructionMaterialTypeId\"},\"StorageTankLengthMeters\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankLengthMeters\"},\"StorageTankWidthMeters\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankWidthMeters\"},\"StorageTankHeightMeters\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankHeightMeters\"},\"StorageTankInnerDiameterMeters\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankInnerDiameterMeters\"},\"StorageTankVolumeCubicLiters\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankVolumeCubicLiters\"},\"StorageTankWeightTons\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankWeightTons\"},\"StorageTankWallThicknessMillimeters\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankWallThicknessMillimeters\"},\"StorageTankOuterDiameterMeters\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankOuterDiameterMeters\"},\"StorageTankContainmentDikeCircumferenceMeters\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankContainmentDikeCircumferenceMeters\"},\"StorageTankContainmentDikeHeightMeters\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankContainmentDikeHeightMeters\"},\"InterstitialSpaceMillimeters\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"InterstitialSpaceMillimeters\"},\"StorageTankMaximumOperatingTemperatureC\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankMaximumOperatingTemperatureC\"},\"StorageTankMinimumOperatingTemperatureC\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankMinimumOperatingTemperatureC\"},\"StorageTankWallInterstitialSpaceMillimeters\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankWallInterstitialSpaceMillimeters\"}}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"StorageTank\",\"path\":\"StorageTank.cdm.json/StorageTank\"},\"description\":\"A container that contains liquids, gases or compressed gases.\",\"primaryKey\":[\"StorageTankId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankId\"},\"dataType\":\"long\",\"description\":\"The unique identifier of a Storage Tank.\",\"isNullable\":false,\"name\":\"StorageTankId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankDescription\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A description of the storage tank.\",\"isNullable\":true,\"name\":\"StorageTankDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a storage tank type.\",\"isNullable\":true,\"name\":\"StorageTankTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankManufacturerName\"},\"dataType\":\"string\",\"dataTypeLength\":256,\"description\":\"The name of the storage tank manufacturer.\",\"isNullable\":true,\"name\":\"StorageTankManufacturerName\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankConstructionCompletedDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the storage tank construction is completed.\",\"isNullable\":true,\"name\":\"StorageTankConstructionCompletedDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankInstallationDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the storage tank was installed.\",\"isNullable\":true,\"name\":\"StorageTankInstallationDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"LastTestedDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The date that the storage tank was last tested.\",\"isNullable\":true,\"name\":\"LastTestedDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"NextTestDate\"},\"dataType\":\"date\",\"dateFormat\":\"YYYY-MM-DD\",\"description\":\"The next test date of the storage tank.\",\"isNullable\":true,\"name\":\"NextTestDate\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankNumberOfWalls\"},\"dataType\":\"integer\",\"description\":\"The number of walls comprising the storage tank.\",\"isNullable\":true,\"name\":\"StorageTankNumberOfWalls\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankColorDescription\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"The color of the storage tank, which may be multiple colors - thus the need for a description.\",\"isNullable\":true,\"name\":\"StorageTankColorDescription\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankNote\"},\"dataType\":\"string\",\"dataTypeLength\":2048,\"description\":\"A note, comment or additional information regarding the storage tank.\",\"isNullable\":true,\"name\":\"StorageTankNote\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"ThermalStorageTankIndicator\"},\"dataType\":\"boolean\",\"description\":\"One form of seasonal thermal energy storage (STES) is the use of large surface water tanks that are insulated and then covered with earth berms to enable the year-round of solar-thermal heat that is collected primarily in the summer for all-year heating.[3] A related technology has become widespread in Danish district heating systems. The thermal storage medium is gravel and water in large, shallow, lined pits that are covered with insulation, soil and grass.[4]\",\"isNullable\":true,\"name\":\"ThermalStorageTankIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankStaticGroundingWireIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the storage tank has a static grounding wire.\",\"isNullable\":true,\"name\":\"StorageTankStaticGroundingWireIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"AtmosphericTankIndicator\"},\"dataType\":\"boolean\",\"description\":\"An atmospheric tank is a container for holding a liquid at atmospheric pressure. The major design code for welded atmospheric tanks are API 650 and API 620. API 653 is used for analysis of in-service storage tanks. In Europe the design code is Eurocode 3 (EN 1993), part 4-2.\",\"isNullable\":true,\"name\":\"AtmosphericTankIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankAutomaticMeasuringTubeIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the storage tank as an automatic measuring tube.\",\"isNullable\":true,\"name\":\"StorageTankAutomaticMeasuringTubeIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankGroundLineOnRoofIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the storage tank has a ground line on the roof.\",\"isNullable\":true,\"name\":\"StorageTankGroundLineOnRoofIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankAntiRotationCableWiringIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the storage tank has anti-rotation cable wire.\",\"isNullable\":true,\"name\":\"StorageTankAntiRotationCableWiringIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankFoamExtinguisherIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the storage tank has an integrated foam extinguisher system.\",\"isNullable\":true,\"name\":\"StorageTankFoamExtinguisherIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankEdgeBuoyIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the storage tank has an edge buoy.\",\"isNullable\":true,\"name\":\"StorageTankEdgeBuoyIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankSupportColumnIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the storage tank has a support column.\",\"isNullable\":true,\"name\":\"StorageTankSupportColumnIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankVacuumValveIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the storage tank has a vacuum valve.\",\"isNullable\":true,\"name\":\"StorageTankVacuumValveIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankFloatingWellIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the storage tank has a float well.\",\"isNullable\":true,\"name\":\"StorageTankFloatingWellIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankMaximumTankLifeYears\"},\"dataType\":\"integer\",\"description\":\"The storage tank maximum tank life expressed in years.\",\"isNullable\":true,\"name\":\"StorageTankMaximumTankLifeYears\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankAboveGroundIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the storage tank is an above ground storage tank.\",\"isNullable\":true,\"name\":\"StorageTankAboveGroundIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankUndergroundIndicator\"},\"dataType\":\"boolean\",\"description\":\"Indicates that the storage tank is an underground storage tank.\",\"isNullable\":true,\"name\":\"StorageTankUndergroundIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankFloatingRoofIndicator\"},\"dataType\":\"boolean\",\"description\":\"Some storage tanks need a floating roof in addition to or in lieu of the fixed roof and structure. This floating roof rises and falls with the liquid level inside the tank, thereby decreasing the vapor space above the liquid level. Floating roofs are considered a safety requirement as well as a pollution prevention measure for many industries including petroleum refining.\",\"isNullable\":true,\"name\":\"StorageTankFloatingRoofIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankCathodicProtectionIndicator\"},\"dataType\":\"boolean\",\"description\":\"In the United States, metal tanks in contact with soil and containing petroleum products must be protected from corrosion to prevent escape of the product into the environment.[2] The most effective and common corrosion control techniques for steel in contact with soil is cathodic protection.\",\"isNullable\":true,\"name\":\"StorageTankCathodicProtectionIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankElectronicMonitoredIndicator\"},\"dataType\":\"boolean\",\"description\":\"A probe permanently installed in the tank is wired to a monitor to provide information on product level and temperature. These systems automatically calculate the changes in product volume that can indicate a leaking tank and usually include a daily printout.\",\"isNullable\":true,\"name\":\"StorageTankElectronicMonitoredIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankInterstitialMonitoringIndicator\"},\"dataType\":\"boolean\",\"description\":\"Monitors are used to check the area between the tank and the barrier for leaks and alert the operator if a leak is suspected. \\n\\nSome monitors indicate the physical presence of the leaked product, either liquid or gaseous. Other monitors check for a change in condition that indicates a hole in the tank, such as a loss of vacuum or a change in the level of a monitoring liquid between the walls of a double-walled\\ntank.  \\n\\nMonitors can be as simple as a dipstick used at the lowest point of the containment to see if liquid product has leaked and pooled there. Monitors can also be sophisticated automated systems that continuously check for leaks. If the system is equipped with an electronic\\nsensor, an alarm will sound and it will shut down the system if a leak is detected.\",\"isNullable\":true,\"name\":\"StorageTankInterstitialMonitoringIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankVaporMonitoringIndicator\"},\"dataType\":\"boolean\",\"description\":\"Vapor monitoring measures product \\\"fumes\\\" in the soil around the UST to check for a leak. This method requires installation of carefully placed monitoring wells. Vapor monitoring can be performed manually on a periodic basis or continuously using permanently installed equipment.\",\"isNullable\":true,\"name\":\"StorageTankVaporMonitoringIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankContainmentSumpIndicator\"},\"dataType\":\"boolean\",\"description\":\"A liquid-tight compartment enclosing the piping connections at the top of an UST providing containment of product leaks. If equipped with a sensor an alarm will sound when a leak is detected.\",\"isNullable\":true,\"name\":\"StorageTankContainmentSumpIndicator\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankRoofTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a storage tank roof type.\",\"isNullable\":true,\"name\":\"StorageTankRoofTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankFireSystemTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a storage tank fire system type.\",\"isNullable\":true,\"name\":\"StorageTankFireSystemTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankMaterialTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a storage tank material type.\",\"isNullable\":true,\"name\":\"StorageTankMaterialTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankPipeConstructionTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a storage tank pipe construction type.\",\"isNullable\":true,\"name\":\"StorageTankPipeConstructionTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankShapeTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a storage tank shape type.\",\"isNullable\":true,\"name\":\"StorageTankShapeTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankLeakDetectionTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a storage tank leak detection type.\",\"isNullable\":true,\"name\":\"StorageTankLeakDetectionTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankClassificationTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a storage tank classification type.\",\"isNullable\":true,\"name\":\"StorageTankClassificationTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankConstructionMaterialTypeId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a storage tank construction material type.\",\"isNullable\":true,\"name\":\"StorageTankConstructionMaterialTypeId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankLengthMeters\"},\"dataType\":\"integer\",\"description\":\"The storage tank length in meters.\",\"isNullable\":true,\"name\":\"StorageTankLengthMeters\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankWidthMeters\"},\"dataType\":\"integer\",\"description\":\"The storage tank width in meters.\",\"isNullable\":true,\"name\":\"StorageTankWidthMeters\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankHeightMeters\"},\"dataType\":\"integer\",\"description\":\"The storage tank height in meters.\",\"isNullable\":true,\"name\":\"StorageTankHeightMeters\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankInnerDiameterMeters\"},\"dataType\":\"integer\",\"description\":\"The storage tank inner diameters in meters.\",\"isNullable\":true,\"name\":\"StorageTankInnerDiameterMeters\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankVolumeCubicLiters\"},\"dataType\":\"integer\",\"description\":\"The storage tank volume in cubic liters.\",\"isNullable\":true,\"name\":\"StorageTankVolumeCubicLiters\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankWeightTons\"},\"dataType\":\"integer\",\"description\":\"The weight of the storage tank in tons.\",\"isNullable\":true,\"name\":\"StorageTankWeightTons\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankWallThicknessMillimeters\"},\"dataType\":\"integer\",\"description\":\"The storage tank wall thickness in millimeters.\",\"isNullable\":true,\"name\":\"StorageTankWallThicknessMillimeters\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankOuterDiameterMeters\"},\"dataType\":\"integer\",\"description\":\"Storage Tank outer Diameter Meters\",\"isNullable\":true,\"name\":\"StorageTankOuterDiameterMeters\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankContainmentDikeCircumferenceMeters\"},\"dataType\":\"integer\",\"description\":\"The circumference of the storage tank containment dike in meters.\",\"isNullable\":true,\"name\":\"StorageTankContainmentDikeCircumferenceMeters\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankContainmentDikeHeightMeters\"},\"dataType\":\"integer\",\"description\":\"The storage tank containment dike height in meters.\",\"isNullable\":true,\"name\":\"StorageTankContainmentDikeHeightMeters\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"InterstitialSpaceMillimeters\"},\"dataType\":\"integer\",\"description\":\"The space between the inner and outer walls of a  double walled tank or a secondary containment system in millimeters.\\n\\n May also be called \\\"annular\\\" space.\",\"isNullable\":true,\"name\":\"InterstitialSpaceMillimeters\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankMaximumOperatingTemperatureC\"},\"dataType\":\"integer\",\"description\":\"The maximum operating temperature of the storage tank in C.\",\"isNullable\":true,\"name\":\"StorageTankMaximumOperatingTemperatureC\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankMinimumOperatingTemperatureC\"},\"dataType\":\"integer\",\"description\":\"The minimum operating temperature of the storage tank in C.\",\"isNullable\":true,\"name\":\"StorageTankMinimumOperatingTemperatureC\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"StorageTank.cdm.json/StorageTank\",\"name\":\"StorageTankWallInterstitialSpaceMillimeters\"},\"dataType\":\"integer\",\"description\":\"The space between the inner and outer walls of a  double walled tank or a secondary containment system in millimeters.\\n\\n May also be called \\\"annular\\\" space.\",\"isNullable\":true,\"name\":\"StorageTankWallInterstitialSpaceMillimeters\"}]}}}",
								"Description": "A container that contains liquids, gases or compressed gases.",
								"DisplayFolderInfo": "{\"name\":\"Network\",\"colorCode\":\"#0050AC\"}",
								"PrimaryKeys": "StorageTankId"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-rizpvlcirp",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "lake_db"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "StorageContainer",
							"ToTableName": "StorageContainerActualStorage",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "StorageContainerId",
									"ToColumnName": "StorageContainerId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"StorageContainer.cdm.json/StorageContainer\",\"toEntity\":\"StorageContainerActualStorage.cdm.json/StorageContainerActualStorage\",\"joinPairs\":[{\"fromAttribute\":\"StorageContainerId\",\"toAttribute\":\"StorageContainerId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-imdicqmfnp",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "lake_db"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "StorageContainer",
							"ToTableName": "StorageContainerAvailableStorage",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "StorageContainerId",
									"ToColumnName": "StorageContainerId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"StorageContainer.cdm.json/StorageContainer\",\"toEntity\":\"StorageContainerAvailableStorage.cdm.json/StorageContainerAvailableStorage\",\"joinPairs\":[{\"fromAttribute\":\"StorageContainerId\",\"toAttribute\":\"StorageContainerId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "relationship-imfsexfdsj",
							"EntityType": "RELATIONSHIP",
							"Namespace": {
								"DatabaseName": "lake_db"
							},
							"Origin": {
								"Type": "SPARK"
							},
							"FromTableName": "StorageContainer",
							"ToTableName": "StorageTank",
							"ColumnRelationshipInformations": [
								{
									"FromColumnName": "StorageContainerId",
									"ToColumnName": "StorageTankId"
								}
							],
							"RelationshipType": 0,
							"Properties": {
								"DerivedModelRelationshipInfo": "{\"baseRelationship\":{\"fromEntity\":\"StorageContainer.cdm.json/StorageContainer\",\"toEntity\":\"StorageTank.cdm.json/StorageTank\",\"joinPairs\":[{\"fromAttribute\":\"StorageContainerId\",\"toAttribute\":\"StorageTankId\"}]}}"
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-custstgacct--sy-dp203-01-sayvnsdp20302')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/8f7ac065-9fb5-428e-afc3-96700169b56e/resourceGroups/rg-dp203-01/providers/Microsoft.Storage/storageAccounts/sayvnsdp20302",
				"groupId": "dfs",
				"fqdns": [
					"sayvnsdp20302.dfs.core.windows.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-sql--sy-dp203-01')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/8f7ac065-9fb5-428e-afc3-96700169b56e/resourceGroups/rg-dp203-01/providers/Microsoft.Synapse/workspaces/sy-dp203-01",
				"groupId": "sql",
				"fqdns": [
					"sy-dp203-01.0a9d22d7-4828-4256-a612-9369e4aaef5b.sql.azuresynapse.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-sqlOnDemand--sy-dp203-01')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/8f7ac065-9fb5-428e-afc3-96700169b56e/resourceGroups/rg-dp203-01/providers/Microsoft.Synapse/workspaces/sy-dp203-01",
				"groupId": "sqlOnDemand",
				"fqdns": [
					"sy-dp203-01-ondemand.0a9d22d7-4828-4256-a612-9369e4aaef5b.sql.azuresynapse.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}